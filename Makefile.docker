# Makefile for local
#

DOCKIMG := bibi21000/janitoo_stable
DOCKIP  := 127.0.0.1
DOCKDIR := /opt/janitoo/docker
SRCDIR  := /opt/janitoo/src

-include Makefile.local

ifdef DOCKIP
DOCKIPF = ${DOCKIP}:
endif

DOCKCNT := $(shell cat .dockerinstance 2>/dev/null)
DOCKID  := $(shell sudo docker ps|grep 8883|grep 8882|cut -d " " -f1)
DOCKID2 := $(shell sudo docker ps|grep 1883|grep 22|cut -d " " -f1)
DOCKEXP := -p ${DOCKIPF}8880:8880 -p ${DOCKIPF}8881:8081 -p ${DOCKIPF}8882:22 -p ${DOCKIPF}8883:1883 -p ${DOCKIPF}8884:9001 -p ${DOCKIPF}8885:8085 -p ${DOCKIPF}8886:8086
DOCKVOLBASE := -v /root/.ssh/ -v $(DOCKDIR)/var/lib/mosquitto/ -v /opt/janitoo/home/ -v /opt/janitoo/etc/ -v /etc/supervisor/
DOCKVOLEXT := -v $(DOCKDIR)/janitoo/src/:/opt/janitoo/src/

docker-vols:
	@echo "Make locals volumes for docker"
	#~ -mkdir -p $(DOCKDIR)
	#~ -mkdir -p $(DOCKDIR)/src

docker-conf: docker-vols
	@echo "Retrieve configuration from live container"
	sudo docker start ${DOCKCNT}
	sleep 5
	-ssh-copy-id root@${DOCKIP} -p 8882
	sleep 1
	-sudo docker stop ${DOCKCNT}
	-sudo docker stop ${DOCKID}
	#~ -scp -r -P 8882 root@${DOCKIP}:/root/.ssh/* $(DOCKDIR)/root/.ssh/
	#~ -scp -r -P 8882 root@${DOCKIP}:/etc/supervisor/* $(DOCKDIR)/etc/supervisor/
	#~ -scp -r -P 8882 root@${DOCKIP}:/etc/nginx/* $(DOCKDIR)/etc/nginx/
	#~ -scp -r -P 8882 root@${DOCKIP}:/etc/mosquitto/* $(DOCKDIR)/etc/mosquitto/
	#~ -scp -r -P 8882 root@${DOCKIP}:/var/log/* $(DOCKDIR)/var/log/
	#~ -scp -r -P 8882 root@${DOCKIP}:/opt/janitoo/etc/* $(DOCKDIR)/janitoo/etc/
	#~ sudo docker stop `sudo docker ps|grep 8883|grep 8882|cut -d " " -f1`
	#~ sudo chown -Rf root:root /opt/janitoo/docker/

docker-git:
	@echo "Retrieve janitoo git repositories from live container"
	[ -d $(SRCDIR) ] && echo "$(SRCDIR) already exist. Can't continue !" && exit 1
	mkdir $(SRCDIR)
	sudo docker start ${DOCKCNT}
	sleep 5
	-scp -r -P 8882 root@${DOCKIP}:/opt/janitoo/src/* $(SRCDIR)/
	sleep 1
	-sudo docker stop ${DOCKCNT}
	-sudo docker stop ${DOCKID}
	-sudo chown -Rf `whoami`:`whoami` /opt/janitoo/docker/

docker-create:
	@echo "Create new container"
	sudo docker create -t ${DOCKEXP} ${DOCKVOLBASE} ${DOCKIMG} >.dockerinstance
	@echo "Container `cat .dockerinstance` created"

docker-inspect:
	@echo "Inspect data containers"
	sudo docker inspect ${DOCKIMG}

docker-purge:
	-sudo docker rm -v $$(docker ps -a -q -f status=exited)
	-sudo docker rm -v $$(docker ps -a -q -f status=created)
	@echo "Docker containers purges"

docker-live:
	@echo "Start container in live mode. All your updates will be lost !!!"
	sudo docker run -i -t ${DOCKEXP} ${DOCKIMG}

docker-pull:
	@echo "Pull image for ${DOCKIMG}"
	sudo docker pull ${DOCKIMG}

docker-shell:
	sudo docker run -i -t ${DOCKEXP} ${DOCKVOLBASE} ${DOCKCNT} /root/shell.sh

docker-ps:
	sudo docker ps -a

docker-images:
	sudo docker images

docker-attach:
	@echo "Attach container ID:${DOCKCNT}"
	sudo docker attach ${DOCKCNT}

docker-stop:
	@echo "Stop container ID:${DOCKID} / ${DOCKCNT}"
	-sudo docker stop ${DOCKCNT}
	-sudo docker stop ${DOCKID}

docker-kill: docker-stop
	@echo "Stop container ID:${DOCKID2}"
	-sudo docker stop ${DOCKID2}

docker-start:
	@echo "Start daemon mode for container ID:${DOCKCNT}"
	sudo docker start ${DOCKCNT}

docker-top:
	@echo "Show top container ID:${DOCKCNT}"
	sudo docker top ${DOCKCNT}

docker-rescue:
	@echo "Start rescue mode for container ID:${DOCKCNT}"
	sudo docker start ${DOCKCNT} /root/rescue.sh

/etc/sudoers.d/docker:
	echo "${USER} ALL= NOPASSWD:/usr/bin/docker"|sudo tee /etc/sudoers.d/docker

sudoers: /etc/sudoers.d/docker

~/.ssh/id_rsa.pub:
	ssh-keygen -t rsa

sshkey-generate: ~/.ssh/id_rsa.pub

ssh:
	ssh root@${DOCKIP} -p 8882

sshkey-copy:
	@echo "Copy keys to container ID:${DOCKCNT}"
	#sudo docker start ${DOCKCNT}
	-ssh-keygen -f ~/.ssh/known_hosts -R [${DOCKIP}]:8882
	#sleep 5
	-ssh-copy-id root@${DOCKIP} -p 8882
	#sudo docker stop ${DOCKCNT}
